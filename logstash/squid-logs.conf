### INPUT ###
input {
  file {
        sincedb_path => "/var/log/logstash/pxsquiddb"
        start_position => "beginning"
        path => "/var/log/syslogs-kibana/pxsquid.log"
        type => "pxsquid"
  }
} ### END INPUT
### FILTER ###
filter {
  #### SQUID ####

  if [type] == "pxsquid" {
    grok {
        match => [ "message", "%{POSINT:timestamp}.%{POSINT:timestamp_ms}\s+%{NUMBER:response_time} %{IPORHOST:src_ip} %{WORD:squid_request_status}/%{NUMBER:http_status_code} %{NUMBER:reply_size_include_header} %{WORD:http_method} %{NOTSPACE:request_url} %{NOTSPACE:user} %{WORD:squid}/%{IP:server_ip} %{NOTSPACE:content_type}" ]
        #match => [ "message", "%{NUMBER:timestamp}\s+%{NUMBER:response_time} %{IPORHOST:src_ip} %{WORD:squid_request_status}/%{NUMBER:http_status_code} %{NUMBER:reply_size_include_header} %{WORD:http_method} %{URI:request_url} %{USERNAME:user} %{WORD:squid_hierarchy_status}/%{IPORHOST:server_ip_or_peer_name} (?\S+\/\S+)" ]
        #match => [ "message", "%{NUMBER:timestamp}\s+%{NUMBER:response_time} %{IPORHOST:src_ip} %{WORD:squid_request_status}/%{NUMBER:http_status_code} %{NUMBER:reply_size_include_header} %{WORD:http_method} %{HOSTNAME:request_url}:%{NUMBER:tcp.port} %{NOTSPACE:user} %{WORD:squid}/%{GREEDYDATA:server_ip} %{NOTSPACE:content_type}" ]
        #match => [ "message", "%{NUMBER:timestamp}\s+%{NUMBER:response_time} %{IPORHOST:src_ip} %{WORD:squid_request_status}/%{NUMBER:http_status_code} %{NUMBER:reply_size_include_header} %{WORD:http_method} %{URI:request_url} %{NOTSPACE:user} %{WORD:squid}/%{GREEDYDATA:server_ip} %{NOTSPACE:content_type}" ]
  }
        mutate {
          convert => [ "response_time", "integer" ]
          remove_field => ["message"]
        }
   }
 } #end filter block
### OUTPUT ###
output {
  if [type] == "pxsquid" 
  {
    elasticsearch {
    index => "pxsquid-logs-%{+YYYY.MM.dd}"
    hosts => ["localhost:9200"]
    }#endelasticsearch
  }#endif
} #end output block
