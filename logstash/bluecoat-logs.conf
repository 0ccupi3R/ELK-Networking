### LOGSTASH CONFIGURATION FILES TO PARSE LOGS FROM BLUECOAT SG ###
### INPUT ###
input {
    file {
            path => ["/var/log/syslogs-kibana/bluecoat.log"]
            sincedb_path => "/var/log/logstash/bluecoatsincedb"
            start_position => "beginning"
            codec => plain {
                    charset => "ISO-8859-1"
            }
            type => "bcproxy"
    }
}
### FILTER ###
filter {
  if [type] == "bcproxy" {
            if ([message] =~ /^#/) {
              drop{}
            }
    grok {
      #strips timestamp and host off of the front of the syslog message leaving the raw message generated by the syslog client and saves it as "raw_message"
      #patterns_dir => "/opt/logstash/patterns"
      #match => [ "message", "%{TIMESTAMP_ISO8601:@timestamp} %{HOSTNAME:syslog_host} %{GREEDYDATA:raw_message}" ]
      match => [ "message", "%{TIMESTAMP_ISO8601:@timestamp} %{HOSTNAME:syslog_host} %{TIMESTAMP_ISO8601:realdate} %{GREEDYDATA:raw_message}" ]
    }
    csv {
      source => "raw_message"
      #columns => ["date", "time", "time-taken", "c-ip", "sc-status", "s-action", "sc-bytes", "cs-bytes", "cs-method", "cs-uri-scheme", "cs-host", "cs-uri-port", "cs-uri-path", "cs-uri-query", "cs-username", "cs-auth-group", "s-hierarchy", "s-supplier-name", "rs(Content-Type)","cs(Referer)", "cs(User-Agent)", "sc-filter-result", "cs-categories", "x-virus-id", "s-ip"]
      columns => ["time-taken", "c-ip", "sc-status", "s-action", "sc-bytes", "cs-bytes", "cs-method", "cs-uri-scheme", "cs-host", "cs-uri-stem", "csusername", "s-supplier-name", "rs(Content-Type)", "cs(User-Agent)", "sc-filter-result", "sc-filter-category","x-virus-id", "s-ip"]
      separator => " "
    }

    if [timestamp] {
      date {
            match => ["timestamp", "YYYY-MM-dd HH:mm:ss" ]
            timezone => "Europe/Madrid"
      }
    } 
    date {
            match => ["realdate", "YYYY-MM-dd HH:mm:ss" ]
            timezone => "UTC"
            target => "realdate"
    }

    if ([s-supplier-ip] and [s-supplier-ip] != "-") { 
       geoip {
                source => "s-supplier-ip"
          }
        }
        mutate {
          convert => ["sc-bytes", "integer",
                      "time-taken", "integer",
                      "cs-bytes", "integer",
                      "duration", "integer"
                      ]
        }
        if [cs(User-Agent)] != "" {
          useragent { source => "cs(User-Agent)" prefix => "user_agent." }
        }
        mutate {
         remove_field => ["message", "host", "date", "time", "gmttime", "localtime", "raw_message"]
        }
    }#endif
} #end filter block
### OUTPUT ###
output {
if [type] == "bcproxy" 
{
  elasticsearch {
  index => "bluecoat-logs-%{+YYYY.MM.dd}"
  hosts => ["localhost:9200"]
  }#endelasticsearch
}#endif
} #end output block
